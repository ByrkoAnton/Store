@model Store.BusinessLogicLayer.Models.PaginationsModels.NavigationModelBase<Store.BusinessLogicLayer.Models.EditionModel.PrintingEditionModel>
@{
    Layout = "~/_Layout.cshtml";
}

@section AddToHead
{
    <link href="~/Styles/ManagementStyleSheet.css" rel="stylesheet" type="text/css" />
}
@{


    <form class="stardart-font" asp-controller="AuthorsManagement" asp-action="GetAuthors">
        <table>
            <tr>
                <th>
                    Id
                    <span class="sort-button">
                        <input type="button" value="1-9" class="btn btn-default button" onclick="sort(`Id`,`asc`);" />
                        <input type="button" value="9-1" class="btn btn-default button" onclick="sort(`Id`,`dsc`);" />
                    </span>
                </th>
                <th>
                    Title
                    <span class="sort-button">
                        <input type="button" value="a-z" class="btn btn-default button" onclick="sort(`Title`,`asc`);" />
                        <input type="button" value="z-a" class="btn btn-default button" onclick="sort(`Title`,`dsc`);" />
                    </span>
                </th>
                <th>
                   Authors
                </th>
                <th>
                    Price
                    <span class="sort-button">
                        <input type="button" value="a-z" class="btn btn-default button" onclick="sort(`Price`,`asc`);" />
                        <input type="button" value="z-a" class="btn btn-default button" onclick="sort(`Price`,`dsc`);" />
                    </span>
                </th>
                <th>
                    Currency
                    <span class="sort-button">
                        <input type="button" value="a-z" class="btn btn-default button" onclick="sort(`Currency`,`asc`);" />
                        <input type="button" value="z-a" class="btn btn-default button" onclick="sort(`Currency`,`dsc`);" />
                    </span>
                </th>
                <th>
                    Status
                    <span class="sort-button">
                        <input type="button" value="a-z" class="btn btn-default button" onclick="sort(`Status`,`asc`);" />
                        <input type="button" value="z-a" class="btn btn-default button" onclick="sort(`Status`,`dsc`);" />
                    </span>
                </th>
                <th>Actions</th>
            </tr>
            @foreach (Store.BusinessLogicLayer.Models.EditionModel.PrintingEditionModel edition in Model.Models) //TODO redundant
            {
        <tr>
            <td>@edition.Id</td>
            <td>@edition.Title</td>
            <td>
                <select style="font-size: 16px" id="edition">

                    @foreach (Store.BusinessLogicLayer.Models.Authors.AuthorModel author in edition.AuthorModels)//TODO redundant
                    {
                        <option>@author.Name</option>
                    }
                </select>
            </td>
            <td>@edition.Price</td>
            <td>@edition.Currency</td>
            <td>@edition.Status</td>
            <td>
                <input type="button" value="Profile" class="btn btn-default button" onclick="getProfile(@edition.Id);" />
                <input type="button" value="Delete" class="btn btn-default button" onclick="deleteEdition(@edition.Id);" />
            </td>
        </tr>
            }
        <tr>
            <td style="text-align:center;">
                SEARCH
            </td>
            <td>
                <input style="width: 98.3%" class="search" type="text" id="Title" />
                <script type="text/javascript">
                    document.getElementById("Title").value = JSON.parse(localStorage.getItem('editionTitleForSearch'));
                </script>
            </td>
            <td colspan="5">
                <input style="width: 100%" type="button" value="SEARCH" class="btn btn-default button" onclick="sort(`Id`,`asc`);" />
            </td>
        </tr>
        </table>
        <input style="width: 100%" type="button" value="ADD NEW EDITION" class="btn btn-default button" onclick="location.href='@Url.Action("AddNewEdition", "EditionManagement")'" />
        
        <div class="pagination">
            @if (@Model.PageModel.HasPreviousPage)
            {
                <input type="button" value="<<" class="btn btn-default button" onclick="navigateToPage(`1`);" />
                <input type="button" value="<" class="btn btn-default button" onclick="navigateToPage(`-1`);" />
            }

            @if (!@Model.PageModel.HasPreviousPage)
            {
                <input type="button" disabled="disabled" value="<<" class="btn btn-default button" />
                <input type="button" disabled="disabled" value="<" class="btn btn-default button" />
            }

            <input class="current-page" id="current" type="number" value="@Model.PageModel.PageNumber" min="1" step="1" onchange="navigateToPage();" />
            /@Model.PageModel.TotalPages

            @if (@Model.PageModel.HasNextPage)
            {
                <input type="button" value=">" class="btn btn-default button" onclick="navigateToPage(`+1`);" />
                <input type="button" value=">>" class="btn btn-default button" onclick="navigateToPage(@Model.PageModel.TotalPages);" />
            }

            @if (!@Model.PageModel.HasNextPage)
            {
                <input type="button" disabled="disabled" value=">" class="btn btn-default button" />
                <input type="button" disabled="disabled" value=">>" class="btn btn-default button" />
            }
        </div>
    </form>
}

@section scripts{
    <script>
        function sort(parametr, sortDirection)//TODO spelling
        {
            var editionTitleForSearch = document.getElementById("Title").value;
            var isAsc = sortDirection == "asc";

            localStorage.setItem("sortParametr", JSON.stringify(parametr));//TODO spelling
            localStorage.setItem("sortDirection", JSON.stringify(isAsc));

            localStorage.setItem("editionTitleForSearch", JSON.stringify(editionTitleForSearch));
            document.cookie = "editionTitleForSearch" + "=" + encodeURIComponent(editionTitleForSearch);

            return window.location.href = '@Url.Action("GetEditions", "EditionManagement")?sortBy=' + parametr + '&isAsc=' + isAsc;
        }

        function navigateToPage(page) {
            if (page === "+1" || page === "-1") {
                page = parseInt(document.getElementById("current").value) + parseInt(page);
            }
            if (page === undefined) {
                page = document.getElementById("current").value;
            }

            var sortParametr = JSON.parse(localStorage.getItem("sortParametr"));//TODO spelling
            var sortDirection = JSON.parse(localStorage.getItem("sortDirection"));
            if (!(sortParametr == "Id" || sortParametr == "Title" || sortParametr == "Price" || sortParametr == "Currency"
                || sortParametr == "Status")) {
                sortParametr = "Price";
            }
            return window.location.href = '@Url.Action("GetEditions", "EditionManagement")?sortBy=' + sortParametr + '&isAsc=' + sortDirection + '&page=' + page;
        }

        function getProfile(id) {
            return window.location.href = '@Url.Action("GetEditionProfile", "EditionManagement")?id=' + id;
        }

         function deleteEdition(id) {
            if(window.confirm("Do you really want to delete this edition?")){
            var currentURL = encodeURIComponent(window.location.href);
            return window.location.href = '@Url.Action("DeleteEdition", "EditionManagement")?id=' + id + '&url=' + currentURL;
            };
        }
        //TODO extra lines

    </script>
}
